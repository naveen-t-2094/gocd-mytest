#ci.gocd.yaml
format_version: 3
pipelines:
  mypipe1: # definition of mypipe1 pipeline
    group: mygroup # note that the group name can contain only of alphanumeric & underscore characters
    label_template: "${mygit[:8]}"
    lock_behavior: none
    parameters: # list of parameters that can be configured for a pipeline
      param1: value1
    secure_variables:
      ENV_PASSWORD: ""
    materials:
      mygit: # this is the name of material, the name can contain only of alphanumeric & underscore characters
        # keyword git says about type of material and url at once
        git: https://github.com/naveen-t-2094/gocd-mytest.git
        branch: master
    environment_variables:
      DOCKER_PATH: /usr/bin/path
      TESTS_DIR: ./tests
      TEST_RESULT_DIR: ./test-results
      TEST_RESULT_FILE: testresult
      TOOLS_DIR: ./tests
    stages: # list of stages in order
      - tests: # name of stage
          clean_workspace: false
          fetch_materials: true
          jobs:
            running-test: # name of the job
              artifacts:
               - test:
                   source: test-results/
              tasks: # ordered list of tasks to execute in job csharp
               - exec: # indicates type of task
                   working_directory: ./tests
                   command: docker
                   arguments:
                     - build
                     - -t
                     - pytest-bdd
                     - -f
                     - ./pytest-image/Dockerfile
                     - .
               - script: ./tests/test-runner.sh

              #  - exec:
              #     command: ls
              #  - exec:
              #       working_directory: ./PyTest
              #       command: docker
              #       arguments:
              #         - build
              #         - -t
              #         - pytest-bdd
              #         - -f
              #         - 
                  #  command: docker build -t test .
                    # - build 
                    # - -t 
                    # - test 
                    # - .

              #  - exec: # indicates type of task
                  #  command: docker build
               # shorthand for script-executor plugin
              #  - script: ./build.sh ci